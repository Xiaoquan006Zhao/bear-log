{"metadata":{"title":"Data Layer","created":"2022-11-11T14:25:46-0600","modified":"2024-08-09T11:07:11-0500","tags":"_book/Programing/Web-Scalability, _book/Programing, _book","uniqueId":"26ADA945-0893-4C5D-B725-FC59748C8734","lastDevice":"xiaoquan’s MacBook Pro","viewport":"width=device-width, initial-scale=1"},"hasAttachments":true,"content":"<!DOCTYPE html>\n<html lang=\"\">\n    <head>\n        <title>Data Layer</title>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"bear-note-unique-identifier\" content=\"26ADA945-0893-4C5D-B725-FC59748C8734\">\n        <meta name=\"created\" content=\"2022-11-11T14:25:46-0600\">\n        <meta name=\"modified\" content=\"2024-08-09T11:07:11-0500\">\n        <meta name=\"tags\" content=\"_book/Programing/Web-Scalability, _book/Programing, _book\">\n        <meta name=\"last device\" content=\"xiaoquan’s MacBook Pro\">\n        \n        <style>\n             body {\n   --base-background-color: #ffffff;\n   --document-background-color: var(--base-background-color);\n }\n\n.document-wrapper {\n  /* Constants used to transform theme values to CSS */\n  --transform-line-height-factor: 1.17;\n\n  /* From template */\n  --base-text-color: #444444;\n  --base-text-secondary-color: #888888;\n  --base-text-tertiary-color: #d9d9d9;\n  --base-background-color: #ffffff;\n  --base-background-secondary-color: #F3F5F7;\n  --base-background-tertiary-color: #E4E5E6;\n  --base-stroke-color: #d9d9d9;\n  --base-stroke-secondary-color: #d9d9d9;\n  --base-accent-color: #DD4C4F;\n  --base-highlight-color: ;\n\n  --document-background-color: var(--base-background-color);\n  --document-text-color: var(--base-text-color);\n  --document-text-secondary-color: var(--base-text-secondary-color);\n  --document-text-light-color: var(--base-text-secondary-color);\n  --document-accent-color: var(--base-accent-color);\n  --document-cursor-color: var(--base-accent-color);\n  --document-link-color: var(--base-accent-color);\n  --document-list-marker-color: var(--base-accent-color);\n  --document-marker-color: var(--base-text-tertiary-color);\n  --document-selection-color: var(--base-selection-color);\n  --document-selection-inactive-color: var(--base-background-tertiary-color);\n  --document-text-font: \"AvenirNext-Regular\";\n  --document-text-size: 15px;\n  --document-line-height-multiplier: calc(\n    1.5 * var(--transform-line-height-factor)\n  );\n\n  --document-headers-text-color: var(--base-text-color);\n  --document-headers-font: \"AvenirNext-Medium\";\n  --document-headers-modular-scale: 1.125;\n  --document-headers-line-height-multiplier: calc(\n    1.3 * var(--transform-line-height-factor)\n  );\n  --document-headers-add-top-bottom-padding: 1;\n  --document-headers-padding-top-multiplier: 0.5;\n  --document-headers-padding-bottom-multiplier: 0.3;\n\n  --document-code-text-color: var(--base-text-color);\n  --document-code-border-color: var(--base-text-tertiary-color);\n  --document-code-background-color: var(--base-background-secondary-color);\n  --document-code-font: \"Menlo-Regular\";\n  --document-code-text-size-multiplier: 0.91em;\n\n  --document-code-syntax-highlight-comment: #65798c;\n  --document-code-syntax-highlight-constant: #0095c9;\n  --document-code-syntax-highlight-number: #0095c9;\n  --document-code-syntax-highlight-string: #d12f1b;\n  --document-code-syntax-highlight-entity: #4a838b;\n  --document-code-syntax-highlight-keyword: #ad3da4;\n  --document-code-syntax-highlight-function: #4a838b;\n  --document-code-syntax-highlight-variable: #4a838b;\n\n  --document-task-background-color: var(--base-background-color);\n  --document-task-border-color: var(--base-text-secondary-color);\n  --document-task-check-color: var(--base-text-color);\n\n  --document-tag-background-color: var(--base-background-tertiary-color);\n  --document-tag-text-color: var(--base-text-color);\n  --document-tag-marker-color: var(--base-text-secondary-color);\n\n  --document-highlighter-background-color: #CDF7BD;\n  --document-highlighter-text-color: #102D05;\n\n  --document-highlighter-red-background-color: #FED09F;\n  --document-highlighter-red-text-color: #321A00;\n\n  --document-highlighter-blue-background-color: #C9E5FF;\n  --document-highlighter-blue-text-color: #001A32;\n\n  --document-highlighter-green-background-color: #CDF7BD;\n  --document-highlighter-green-text-color: #102D05;\n\n  --document-highlighter-purple-background-color: #FEDAFF;\n  --document-highlighter-purple-text-color: #310032;\n\n  --document-highlighter-yellow-background-color: #FCF195;\n  --document-highlighter-yellow-text-color: #312C01;\n  \n  --document-file-fold-color: var(--base-background-tertiary-color);\n  --document-file-background-color: var(--base-background-secondary-color);\n\n  --document-separator-border-color: var(--base-stroke-secondary-color);\n\n  --document-table-border-color: var(--base-stroke-secondary-color);\n  --document-table-cell-background-color: var(--base-background-color);\n  --document-table-cell-alternate-background-color: var(\n    --base-background-secondary-color\n  );\n}\n\n.document-wrapper,body{background-color:var(--document-background-color)}.document-wrapper h1.setext,.document-wrapper h2.setext{border-bottom:calc(2 * var(--document-hairline-width)) solid var(--document-separator-border-color);padding-bottom:.6em}.document-wrapper blockquote blockquote blockquote blockquote blockquote::before,.document-wrapper blockquote blockquote blockquote::before,.document-wrapper blockquote::before{background-color:var(--document-list-marker-color)}.document-wrapper td[data-alignment=\"1\"],.document-wrapper th{text-align:left}.document-wrapper :after,.document-wrapper :before,.document-wrapper a,.document-wrapper abbr,.document-wrapper acronym,.document-wrapper address,.document-wrapper applet,.document-wrapper article,.document-wrapper aside,.document-wrapper audio,.document-wrapper b,.document-wrapper big,.document-wrapper blockquote,.document-wrapper canvas,.document-wrapper caption,.document-wrapper center,.document-wrapper cite,.document-wrapper code,.document-wrapper dd,.document-wrapper del,.document-wrapper details,.document-wrapper dfn,.document-wrapper div,.document-wrapper dl,.document-wrapper dt,.document-wrapper em,.document-wrapper embed,.document-wrapper fieldset,.document-wrapper figcaption,.document-wrapper figure,.document-wrapper footer,.document-wrapper form,.document-wrapper h1,.document-wrapper h2,.document-wrapper h3,.document-wrapper h4,.document-wrapper h5,.document-wrapper h6,.document-wrapper header,.document-wrapper hgroup,.document-wrapper i,.document-wrapper iframe,.document-wrapper ins,.document-wrapper kbd,.document-wrapper label,.document-wrapper legend,.document-wrapper li,.document-wrapper mark,.document-wrapper menu,.document-wrapper nav,.document-wrapper object,.document-wrapper ol,.document-wrapper output,.document-wrapper p,.document-wrapper pre,.document-wrapper q,.document-wrapper ruby,.document-wrapper s,.document-wrapper samp,.document-wrapper section,.document-wrapper small,.document-wrapper span,.document-wrapper strike,.document-wrapper strong,.document-wrapper summary,.document-wrapper table,.document-wrapper tbody,.document-wrapper td,.document-wrapper tfoot,.document-wrapper th,.document-wrapper thead,.document-wrapper time,.document-wrapper tr,.document-wrapper tt,.document-wrapper u,.document-wrapper ul,.document-wrapper var,.document-wrapper video{all:unset}.document-wrapper{--document-inline-padding-top-bottom:0.25em;--document-inline-padding-left-right:0.25em;--header-1-font-size:2em;--header-2-font-size:1.6em;--header-3-font-size:1.27em;--document-hairline-width:calc(var(--document-text-size) / 15);box-sizing:border-box;color:var(--document-text-color);font-family:var(--document-text-font);font-size:var(--document-text-size);line-height:var(--document-line-height-multiplier);min-height:100%;max-width:48em;width:100%;tab-size:4;margin:0 auto;padding:0 2em}body{text-rendering:optimizeLegibility}.document-wrapper:focus-visible{outline:0}.document-wrapper .marker{color:var(--document-marker-color);display:none}.document-wrapper [data-direction=\"2\"]{direction:rtl}.document-wrapper div.footnote,.document-wrapper div.link-definition,.document-wrapper p{display:block}.document-wrapper p.blank-line::before{content:\" \"}.document-wrapper h1,.document-wrapper h2,.document-wrapper h3,.document-wrapper h4,.document-wrapper h5,.document-wrapper h6{font-family:var(--document-headers-font);display:block;line-height:var(--document-headers-line-height-multiplier)}.document-wrapper h1{font-size:var(--header-1-font-size);padding-block-start:0.8em;padding-block-end:0.33em}.document-wrapper h2{font-size:var(--header-2-font-size);padding-block-start:0.66em;padding-block-end:0.27em}.document-wrapper h3{font-size:var(--header-3-font-size);padding-block-start:0.53em;padding-block-end:0.27em}.document-wrapper code,.document-wrapper pre{font-size:var(--document-code-text-size-multiplier);font-family:var(--document-code-font),monospace}.document-wrapper h4,.document-wrapper h5,.document-wrapper h6{padding-block-start:0.4em;padding-block-end:0.27em}.document-wrapper h1.setext{margin-bottom:.45em}.document-wrapper h2.setext{margin-bottom:.2em}.document-wrapper .fenced-code *,.document-wrapper .fenced-code-content .marker,.document-wrapper .fenced-code-content .space,.document-wrapper .hard-linebreak-marker,.document-wrapper .image .space,.document-wrapper .image-destination,.document-wrapper .image-label,.document-wrapper .image-title,.document-wrapper .indented-code .space,.document-wrapper .link .space,.document-wrapper .link-destination,.document-wrapper .link-label,.document-wrapper .link-title,.document-wrapper .replace .text,.document-wrapper .setext-heading-marker+.line-ending,.document-wrapper .yaml-marker+.line-ending,.document-wrapper li>p>.space:first-child,.document-wrapper tr.delimiter-row{display:none}.document-wrapper ol,.document-wrapper ul{display:block;padding-inline-start:2.13em}.document-wrapper li{display:list-item;color:var(--document-text-color)}.document-wrapper .color-marker,.document-wrapper .entity-marker,.document-wrapper .fenced-code-content,.document-wrapper .fenced-code-content *,.document-wrapper .footnote-separator,.document-wrapper .link-definition-separator,.document-wrapper code.code-inline,.document-wrapper li>p{display:inline}.document-wrapper ul{list-style-type:disc}.document-wrapper li li li li li li li ul,.document-wrapper li li li li li ul,.document-wrapper li li li ul,.document-wrapper li ul{list-style:circle}.document-wrapper li li li li li li ul,.document-wrapper li li li li ul,.document-wrapper li li ul{list-style:disc}.document-wrapper li::marker{color:var(--document-list-marker-color)}.document-wrapper ol{list-style-type:none;counter-reset:custom-list-item calc(var(--data-list-start,1) - 1)}.document-wrapper ol>li{counter-increment:custom-list-item;position:relative}.document-wrapper ol>li::before{content:counter(custom-list-item) \". \";color:var(--document-list-marker-color);position:absolute;transform:translate(calc(-100% - .33em),0)}.document-wrapper ol>li[data-big-number=true]{margin-inline-start:-2.05em}.document-wrapper ol>li[data-big-number=true]::before{position:static;padding-inline-end:0.25em}.document-wrapper ol>li[data-list-type=\"1\"]:before{content:counter(custom-list-item) \") \"}.document-wrapper [data-direction=\"2\"] ol>li::before,.document-wrapper ol[data-direction=\"2\"]>li::before{transform:translate(calc(100% + .33em),0)}.document-wrapper li[role=checkbox]{list-style:none;position:relative}.document-wrapper li[aria-checked=true]{color:var(--document-text-secondary-color)}.document-wrapper .todo-checkbox{display:inline-block;margin-left:-1.7em;margin-right:.5em}.document-wrapper .todo-checkbox svg{display:inline-block;margin-bottom:-.3em}.document-wrapper blockquote{display:block;padding-inline-start:2.13em;position:relative}.document-wrapper code,.document-wrapper mark,span.highlighted{padding:var(--document-inline-padding-top-bottom) var(--document-inline-padding-left-right)}.document-wrapper blockquote::before{content:\"\";position:absolute;top:.2em;left:1em;width:.13em;height:calc(100% - .4em);border:var(--document-hairline-width) solid var(--document-list-marker-color);border-radius:.33em}.document-wrapper code,.document-wrapper pre.fenced-code,.document-wrapper pre.indented-code,.document-wrapper pre.yaml{color:var(--document-code-text-color);background-color:var(--document-code-background-color);border-radius:.25em}.document-wrapper [data-direction=\"2\"] blockquote::before,.document-wrapper blockquote[data-direction=\"2\"]::before{left:0;right:1em}.document-wrapper blockquote blockquote blockquote blockquote blockquote blockquote::before,.document-wrapper blockquote blockquote blockquote blockquote::before,.document-wrapper blockquote blockquote::before{background-color:transparent}.document-wrapper hr{display:block;margin-block-start:calc(var(--document-line-height-multiplier) * 0.5em);margin-block-end:calc(var(--document-line-height-multiplier) * -0.5em);border-top:var(--document-hairline-width) solid var(--document-separator-border-color)}.document-wrapper pre{display:block;white-space:pre-wrap}.document-wrapper pre.indented-code{padding-inline-start:2.13em}.document-wrapper pre.fenced-code,.document-wrapper pre.yaml{padding:0 .5em}.document-wrapper .fenced-code::before{content:\"\\200B\"}.document-wrapper code{font-weight:400;font-style:normal;display:block}.document-wrapper mark code{color:var(--document-text-color);background-color:var(--document-highlighter-background-color)}.document-wrapper em,.document-wrapper i{font-family:AvenirNext-Italic}.document-wrapper b,.document-wrapper strong,.document-wrapper th{font-family:AvenirNext-Bold}.document-wrapper mark,span.highlighted{color:var(--document-highlighter-background-text-color);background-color:var(--document-highlighter-background-color);text-decoration:inherit;unicode-bidi:embed;border-radius:.25em}.document-wrapper mark.red,span.highlighted.red{color:var(--document-highlighter-red-background-text-color);background-color:var(--document-highlighter-red-background-color)}.document-wrapper mark.blue,span.highlighted.blue{color:var(--document-highlighter-blue-background-text-color);background-color:var(--document-highlighter-blue-background-color)}.document-wrapper mark.green,span.highlighted.green{color:var(--document-highlighter-green-background-text-color);background-color:var(--document-highlighter-green-background-color)}.document-wrapper mark.yellow,span.highlighted.yellow{color:var(--document-highlighter-yellow-background-text-color);background-color:var(--document-highlighter-yellow-background-color)}.document-wrapper mark.purple,span.highlighted.purple{color:var(--document-highlighter-purple-background-text-color);background-color:var(--document-highlighter-purple-background-color)}.document-wrapper u{text-decoration:underline;text-decoration-color:var(--document-accent-color);unicode-bidi:embed}.document-wrapper s,.document-wrapper strike{text-decoration:line-through}.document-wrapper a{color:var(--document-link-color);unicode-bidi:embed;cursor:pointer}.document-wrapper a:hover{text-decoration:inherit}.document-wrapper .wiki-separator-marker{display:inline;color:inherit}.document-wrapper .link-definition-title{color:var(--document-text-light-color)}.document-wrapper .footnote-ref{font-size:.9em;vertical-align:super}.document-wrapper span.entity{direction:ltr;unicode-bidi:embed;color:var(--document-code-syntax-highlight-entity)}.document-wrapper span.escape{unicode-bidi:embed}.document-wrapper .color{font-family:var(--document-code-font),monospace;font-size:var(--document-code-text-size-multiplier);padding-inline-start:1.2em;position:relative;direction:ltr;unicode-bidi:embed}.document-wrapper .color::before{content:\"\";position:absolute;width:.9em;height:.9em;left:0;bottom:0;transform:translateY(-15%);border:var(--document-hairline-width) solid rgb(0,0,0,.3);border-radius:.9em;background-color:var(--data-color)}.document-wrapper .hashtag{color:var(--document-tag-text-color);background-color:var(--document-tag-background-color);border-radius:1em;padding:calc(var(--document-inline-padding-top-bottom) - 2 * var(--document-hairline-width)) calc(var(--document-inline-padding-left-right) + .3em);unicode-bidi:embed}.document-wrapper .hashtag>.marker{display:inline;color:var(--document-tag-marker-color);padding:0}.document-wrapper table{display:block;max-width:fit-content;overflow-x:auto;border-collapse:separate;border-spacing:0;border:var(--document-hairline-width) solid var(--document-table-border-color);border-radius:.33em;margin-bottom:calc(var(--document-line-height-multiplier) * 1em)}.document-wrapper table[data-direction=\"2\"]{margin-left:auto;direction:ltr}.document-wrapper tr{display:table-row;background-color:var(--document-table-cell-background-color)}.document-wrapper tr.header-row,.document-wrapper tr:nth-child(odd){background-color:var(--document-table-cell-alternate-background-color)}.document-wrapper td,.document-wrapper th{box-sizing:border-box;display:table-cell;padding:.37em .75em;min-width:5em;border-right:var(--document-hairline-width) solid var(--document-table-border-color)}.document-wrapper td:last-of-type,.document-wrapper th:last-of-type{border:none}.document-wrapper table[data-direction=\"2\"] td{margin-left:auto}.document-wrapper td[data-alignment=\"2\"]{text-align:right}.document-wrapper td[data-alignment=\"3\"]{text-align:center}.document-wrapper .code_comment{color:var(--document-code-syntax-highlight-comment)}.document-wrapper .code_constant{color:var(--document-code-syntax-highlight-constant)}.document-wrapper .code_number{color:var(--document-code-syntax-highlight-number)}.document-wrapper .code_string{color:var(--document-code-syntax-highlight-string)}.document-wrapper .code_entity{color:var(--document-code-syntax-highlight-entity)}.document-wrapper .code_keyword{color:var(--document-code-syntax-highlight-keyword)}.document-wrapper .code_function{color:var(--document-code-syntax-highlight-function)}.document-wrapper .code_variable{color:var(--document-code-syntax-highlight-variable)}.document-wrapper img{max-width:100%}.document-wrapper .pdf_preview{display:inline-block;width:100%;height:500px;background-color:#fff;overflow:hidden;padding:0;margin:0;position:relative;border-radius:4px}.document-wrapper .arrow svg #body,.document-wrapper .arrow svg #head{fill:var(--base-text-color)}.document-wrapper .todo-checkbox svg #body{stroke:var(--document-task-border-color)}.document-wrapper .todo-checkbox svg #check{fill:var(--document-task-check-color)}.document-wrapper .todo-checkbox.todo-checked svg #body{opacity:.35}.document-wrapper .todo-checkbox.todo-checked svg #check{opacity:.4}\n\n        </style>\n    </head>\n    <body>\n        <div class=\"document-wrapper\">\n            <h1 id='Data Layer'>Data Layer</h1><br>\n<h1 id='Table of Contents'>Table of Contents</h1><ul>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Scaling%20with%20MySQL%20%28Relational%20database%20engines%29'>Scaling with MySQL (Relational database engines)</a>\n<ul>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Replication%20'>Replication </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Data%20Partitioning%20%28Sharding%29%20'>Data Partitioning (Sharding) </a></li>\n</ul>\n</li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Scaling%20with%20NoSQL'>Scaling with NoSQL</a>\n<ul>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=CAP%20Theorem%20'>CAP Theorem </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=The%20Rise%20of%20Eventual%20Consistency%20'>The Rise of Eventual Consistency </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Faster%20Recovery%20to%20Increase%20Availability%20'>Faster Recovery to Increase Availability </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Cassandra%20Topology%20'>Cassandra Topology </a></li>\n</ul>\n</li>\n</ul><br>\n<hr><br>\n<br>\n<h2 id='Scaling with MySQL (Relational database engines)'>Scaling with MySQL (Relational database engines)</h2><h3 id='Replication'>Replication</h3><ul>\n<li><b>Replication</b> usually refers to a <b>mechanism</b> that allows you to have multiple <b>copies</b> of the same data stored <b>on different machines</b>.</li>\n</ul><br>\n<h4 id='Replication deployment topology'>Replication deployment topology</h4><ul>\n<li><b>Replication lag</b> (the time a data is updated on mater to it is replicated on a slave) should be <b>less than one second</b><br></li>\n<li><b>Master and Slave</b>\n<ul>\n<li>Connect to a slave to read data from it, but it can modify data only through the master server.</li>\n<li>The master server records all of these statements in a log file called a binlog, together with a timestamp, and it also assigns a sequence number to each statement.</li>\n<li>Once a statement is written to a binlog, it can then be sent to slave servers.</li>\n<li><b>Asynchronous</b> allows for <b>decoupling</b> of the master from its slaves</li>\n<li>You can always connect a new slave or disconnect slaves at any point in time without affecting the master.</li>\n</ul>\n</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/BF7F4946-DB83-42A9-ABBB-45B62864FA36.png\"></p><ul>\n<li><b>Advantage</b>:\n<ul>\n<li><b>Share load</b> for read-only queries</li>\n<li>Use different slave for <b>different types of queries</b>.\n<ul>\n<li>One slave for regular application queries and another slave for slow, long-running reports</li>\n</ul>\n</li>\n<li>Zero-downtime <b>backups</b></li>\n<li>Use a proxy or load balancer to implement failure detection</li>\n</ul>\n</li>\n<li><b>Failure</b>\n<ul>\n<li><b>Slave failure</b>\n<ul>\n<li>Remove it from service (load balancer), <b>rebuild</b> it from <b>back up</b> or slave or master with a sequence number, reconnect with load balancer, starting replicating</li>\n<li>The <b>older</b> the backup and the <b>busier</b> the database, the <b>longer</b> it will take for the new slave to catch up</li>\n</ul>\n</li>\n<li><b>Master failure</b>\n<ul>\n<li>Find out which of your slaves is <b>most up to date</b></li>\n<li>Make sure that other slaves are <b>identical</b> to your new master (by building all of them from new master or manually checking)\n<ul>\n<li><b>No data conflict</b></li>\n</ul>\n</li>\n<li><b>Reconfigure</b> all remaining slaves to replicate from the new master</li>\n</ul>\n</li>\n</ul>\n<br></li>\n<li><b>Master Master</b>\n<ul>\n<li>Master A replicates from Master B and Master B replicates from Master A (But clients <b>only writes to A</b> because <b>higher complexity</b> (Duplicating sequence number) and risk of <b>data inconsistency</b>(concurrent modification of the same row))</li>\n<li>Each statement written to a master’s binlog includes the name of the server it was originally written to (No duplicated statements)</li>\n</ul>\n</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/96038CD1-0116-44B7-A9A9-316EFC766294.png\"></p><ul>\n<li>In case of <b>Master A failure</b>, or any time you need to perform long-lasting maintenance, your application can be quickly <b>reconfigured</b> to direct all writes <b>to Master B</b></li>\n<li><b>Master Master with Slave</b>\n<ul>\n<li><b>Identical groups</b> of servers in a master-master configuration</li>\n<li>Allows you to switch between groups with <b>minimal downtime</b>\n<ul>\n<li>The downtime is cause by stopping incoming traffic necessarily to create a consistent model across all masters\n<ul>\n<li>For example, Take master B for system update, <u>stop master A, replicate A to B, reconfigure traffic to B</u>, update A (the underlined parts are the down time)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/7B997E03-CA85-4F5D-B3B5-9A995038FCE1.png\"></p><br>\n<ul>\n<li><b>Master Master</b> is bad for scalability (good for availability)\n<ul>\n<li>Both masters have to perform <b>all the writes</b></li>\n<li>Additional I/O to write replicated statements into the relay log</li>\n<li>Both of them will need more memory to hold ever-growing indexes and to keep enough of the data set in cache. (by being scaled vertically)</li>\n</ul>\n</li>\n</ul><br>\n<hr><br>\n<h5 id='Interesting questions regarding replication topology'>Interesting questions regarding replication topology</h5><ul>\n<li><b>Multilevel replication</b> to further distribute the load and keep adding even more slaves (<b>increases replication lag</b>, but <b>increase read capacity</b>)\n<ul>\n<li><b>Tiktok</b>, content could benefit from high read ability a few seconds or tens of seconds replication lag is not a problem as people are there to see content not a specific content (user profile need low replication lag thus does not suit Multilevel replication, functional spilt)</li>\n</ul>\n</li>\n<li><b>Replication</b> is a great way to scale the number of concurrently reading clients and the number of read queries per second, but it is <b>not a way to scale the overall data set size</b>.\n<ul>\n<li>Data is the same on all machines, means that a single server needs to write, read, index, and search through all of the data contained in your database.</li>\n</ul>\n</li>\n<li><b>Active data set</b>, all of the data that must be accessed frequently by your application\n<ul>\n<li>When active data set is big, it is impossible to fit them in memory. Loading from disk is a bottleneck.</li>\n</ul>\n</li>\n<li><b>Replication lag</b>\n<ul>\n<li>Cache the data that has been written on the client side so that you would not need to read the data that you have just written</li>\n<li>Alternatively, you can send critical read requests to the master so that they would always result in the most up-to-date data.</li>\n</ul>\n</li>\n<li><b>Consistency Break</b> (Once the mastery and slave are out of sync, all operations after that are invalid)\n<ul>\n<li>Using <b>functions</b> that generate <b>random numbers</b></li>\n<li>Executing an update <b>statement with a limit clause</b></li>\n<li>Although some open-source tools like <b>pt-table-checksum</b> or <b>pt-table-sync</b> can help you discover and fix such problems, there is no high-availability autopilot built into MySQL replication.\n<ul>\n<li>If things break, you are the one who will have to fix them, and it may require a great deal of knowledge, experience, and time to get there.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><b>Leverage host service</b>\n<ul>\n<li>Considering that managing MySQL replication is fairly involved, it can be a good strategy to use a hosted MySQL solution like <b>Amazon RDS</b> (Amazon Relational Database Service) or <b>Rackspace Cloud Database</b></li>\n</ul>\n</li>\n</ul><br>\n<h3 id='Data Partitioning (Sharding)'>Data Partitioning (Sharding)</h3><ul>\n<li><b>Data partitioning</b> is <b>divide</b> the data set into smaller pieces so that it could be <b>distributed</b> across <b>multiple machines</b> and so that none of the servers would need to deal with the entire data set.\n<ul>\n<li>Servers become <b>independent</b> from one another, as they share nothing</li>\n</ul>\n</li>\n<li><b>Choosing the Sharding Key</b>\n<ul>\n<li>A <b>Sharding key</b> is the information that is used to decide which server is responsible for the data that you are looking for</li>\n<li>In fact, MySQL does not need any special configuration, as it does not know that sharding is applied to the data set.</li>\n<li>All of the sharding logic lives in your application and the database schema is identical on all of the shards.</li>\n</ul>\n</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/DB606EE1-602B-474D-99FD-91A61A145646.png\"></p><ul>\n<li><b>Even distribution</b>\n<ul>\n<li>It is usually not possible to ensure equal size of your data buckets, but as long as your buckets are small and you have a lot of them, your servers will still end up with a pretty good overall data distribution.</li>\n</ul>\n</li>\n<li><b>Advantage</b>\n<ul>\n<li>Scale <b>horizontally</b></li>\n<li>You can implement it in the <b>application layer</b> and then apply it to any data store, regardless of whether it supports sharding out of the box or not.</li>\n</ul>\n</li>\n<li><b>Challenge in application-level sharding</b> (consider a cloud host that solves them, Azure SQL Database Elastic Scale)\n<ul>\n<li>Cannot execute <b>queries spanning multiple shards</b>\n<ul>\n<li>Any time you want to run such a query, you need to execute parts of it on each shard and then somehow merge the results in the application layer.</li>\n</ul>\n</li>\n<li><b>Losing ACID transaction</b> (Atomicity, Consistency, Isolation, Durability)\n<ul>\n<li>Maintaining ACID properties across shards requires you to use <b>distributed transactions</b>.\n<ul>\n<li>If you run update shard A and succeed, then update shard B and failed, you can’t roll back shard A as it has been completed.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><b>Add more servers (shards)</b>, Depending on how you map from sharding key to the server number, it might be surprisingly difficult to add more servers to your sharded deployment.\n<ul>\n<li><b>Modulo-based mapping</b> is that each user is assigned to a particular server based on the total number of servers. As the total number of servers changes, most of the user–server mappings change.</li>\n<li><b>Alternative</b>, keep all of the mappings in a separate database (possibly a master topology to increase availability)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/ADA9199F-57AA-4922-9ABA-6BE104628D56.png\"></p><ul>\n<li><b>Alternative</b>, (easier) Use the <b>modulo function</b> to map from the sharding key value to the database number, but each database is just a <b>logical MySQL database</b> rather than a physical machine.\n<ul>\n<li>Modulo function to locate server number and db number</li>\n</ul>\n</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/6E0EB5AB-F111-4CAB-B6E8-4D200A0EE6DF.png\"></p><ul>\n<li>When you want to <b>scale</b>, copy half of the data to two servers and update the Module function that locate server number (double capacity and modify a few lines)</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/F91BD053-BD8A-445B-AD69-42714A7D7C04.png\"></p><ul>\n<li><b>Globally unique identifier</b>, some data store supports it\n<ul>\n<li>Use some <b>logic</b> (even, odd) or <b>atomic counters</b> provided by some data stores</li>\n</ul>\n</li>\n</ul><br>\n<h2 id='Scaling with NoSQL'>Scaling with NoSQL</h2><ul>\n<li>The <b>mind shift</b> of the NoSQL era is that when you set out to design a data store, you need to first decide what <b>features</b> are most <b>important</b> to you (for example availability, latency, consistency, ease of use, transactional guarantees, or other dimensions of scalability).\n<ul>\n<li>All of the NoSQL data stores make <b>significant sacrifices</b> to support their top-priority features</li>\n</ul>\n</li>\n</ul><br>\n<h3 id='CAP Theorem'>CAP Theorem</h3><ul>\n<li>In this theorem, a distributed system consists of <b>nodes</b> (servers) and <b>network</b> connections allowing nodes to talk to each other.</li>\n<li><b>Consistency</b> ensures that all of the nodes see the same data at the same time.</li>\n<li><b>Availability</b> guarantees that any available node can serve client requests even when other nodes fail.</li>\n<li><b>Partition</b> tolerance ensures that the system can operate even in the face of network failures where communication between nodes is impossible.</li>\n</ul><br>\n<h3 id='The Rise of Eventual Consistency'>The Rise of Eventual Consistency</h3><ul>\n<li><b>Eventual consistency</b> is a property of a system where different nodes may have different versions of the data, but where state changes eventually propagate to all of the servers.</li>\n<li>Some data stores use eventual consistency as a way to increase <b>high availability</b>\n<ul>\n<li>It can lead to <b>conflicts</b></li>\n<li>The <b>simplest policy</b> is to <b>accept the most recent write</b> and discard earlier writes.</li>\n<li><b>Alternatively</b>, some data stores like Dynamo <b>push the responsibility for conflict</b> resolution onto its clients\n<ul>\n<li>The client can then apply <b>different business rules</b> to resolve each type of conflict in the most graceful way.\n<ul>\n<li><b>The Amazon shopping cart</b>, people can still put things in the shopping cart when some servers is down. These writes may lead of conflicts. Whenever the multiple versions of shopping cart are discovered by the client code, the carts are merged by adding all the items from all of the shopping carts. No item added to a cart would be lost. (the most graceful way)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Eventually consistent system like MySQL replication, where only one server can accept writes, it can be a challenge to keep all of the copies of the data in sync.\n<ul>\n<li>Even the smallest human error, application bug, or hardware issue could result in the slave having different data from the master.</li>\n</ul>\n</li>\n<li>To deal with edge-case scenarios where different servers end up with different data, some NoSQL data stores, like Cassandra, employ additional <b>self-healing</b> strategies\n<ul>\n<li>For example, <b>10 percent</b> of reads sent to <b>Cassandra</b> nodes trigger a background <b>read repair</b> mechanism.\n<ul>\n<li>As part of this process, after a response is sent to the client, the Cassandra node fetches the requested data from all of the replicas, compares their values, and sends updates back to any node with inconsistent or stale data.</li>\n<li>It might seem like overkill to keep comparing all of the data 10 percent of the time, since each of the replicas can accept writes, it is very easy for data to diverge during any maintenance or network issues. Having a fast way of repairing data adds overhead, but it makes the overall system much more resilient to failures</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Eventual consistency is a tradeoff and it is usually <b>much more difficult to reason</b> about an eventually consistent system than a globally consistent one.</li>\n<li>Some of the eventually consistent systems, like Cassandra, allow clients to <b>fine-tune</b> the guarantees and tradeoffs made by specifying the consistency level of each query independently.</li>\n<li><b>Quorum consistency</b>, the majority of the replicas agree on the result.\n<ul>\n<li>When you write using quorum consistency, the majority of the servers need to confirm that they have persisted your change.</li>\n<li>Reading using a quorum, on the other hand, means that the majority of the replicas need to respond so that the most up-to-date copy of the data can be found and returned to the client.</li>\n</ul>\n</li>\n</ul><br>\n<h3 id='Faster Recovery to Increase Availability'>Faster Recovery to Increase Availability</h3><ul>\n<li>In <b>MongoDB</b>, data is <b>automatically sharded</b> and distributed among multiple  servers\n<ul>\n<li>Any time a server becomes <b>unavailable</b>, MongoDB <b>rejects</b> all writes to the data that the failed server was responsible for.</li>\n<li>To <b>add data redundancy</b> and <b>increase high availability</b>, MongoDB supports <b>replica sets</b>, and it is recommended to set up each of the shards as a replica set.\n<ul>\n<li>In replica sets, multiple servers share the same data, with a single server being elected as a primary.</li>\n<li>Whenever the primary node fails, an election process is initiated to decide which of the remaining nodes should take over the primary role.</li>\n</ul>\n</li>\n<li>This way, the window of <b>unavailability</b> can be <b>minimized</b> by <b>automatic and prompt failover</b></li>\n<li>If the primary node failed before your changes got replicated to secondary nodes, your changes would be permanently lost</li>\n</ul>\n</li>\n</ul><br>\n<h3 id='Cassandra Topology'>Cassandra Topology</h3><ul>\n<li>All of its nodes are <b>functionally equal</b> (No single point of failure)\n<ul>\n<li>Not identical, Cassandra performs data partitioning automatically so that each of the nodes gets a subset of the overall data set.</li>\n</ul>\n</li>\n<li>Clients can connect to any of Cassandra’s nodes and when they connect to one, that node becomes the client’s <b>session coordinator</b></li>\n<li>Clients send all of their requests to the session coordinator and the coordinator takes responsibility for all of the internal cluster activities like replication or sharding. (great example of <b>decoupling</b> and significantly reduces complexity on the application side)</li>\n</ul><p><img src=\"/data/Data Layer/Data%20Layer/83019D15-0908-4115-820E-1CA836C0354D.png\"></p><ul>\n<li><b>Advantage</b>\n<ul>\n<li>Rather than defining the schema up front, you <b>dynamically create fields</b> as they are required (data have different fields and live on different servers)\n<ul>\n<li>You can make application changes more rapidly without the need to execute expensive alter table commands any time you want to persist a new type of information.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><b>Challenge</b>\n<ul>\n<li><b>Fewer tools to search for data</b>, To access data in any of the columns, you need to know which row are you looking for<b>row key</b> (something like a <b>primary key</b> in a relational database)</li>\n<li>The coordinator looks up which Cassandra server is responsible for that particular partition range and delegates the query to the correct server.</li>\n</ul>\n</li>\n</ul><hr><br>\n<ul>\n<li>In Cassandra, you can specify how many copies of each piece of data you want to keep across the cluster, and session coordinators are responsible for ensuring the correct number of replicas.</li>\n</ul><hr><br>\n<ul>\n<li>It is <b>easy to get started</b> with most NoSQL data stores, but to be able to <b>operate them at scale</b> takes much more <b>experience</b> and <b>understanding</b> of their internal structure than you might expect.\n<ul>\n<li><b>Deletes are the most expensive</b> type of operation you can perform in Cassandra, which can come as a big surprise.</li>\n</ul>\n</li>\n<li>Without deep knowledge of the strengths, weaknesses, and internals of NoSQL data stores, you can easily paint yourself into a corner.\n<ul>\n<li><b>Before</b> you decide to <b>use any of the NoSQL</b> data stores, I suggest <b>reading</b> at least one book about the selected data store and then explicitly <b>search</b> for <b>gotchas</b>, <b>pitfalls</b>, and <b>common problems</b> that people run into when using that technology.</li>\n</ul>\n</li>\n</ul><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<p><span class='hashtag'><span class='hashtag-marker marker'>#</span>_book<span class='hashtag-separator-marker marker'>/</span>Programing<span class='hashtag-separator-marker marker'>/</span>Web-Scalability</span></p>\n        </div>\n    </body>\n</html>\n","rawHtml":"<!DOCTYPE html>\n<html lang=\"\">\n    <head>\n        <title>Data Layer</title>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"bear-note-unique-identifier\" content=\"26ADA945-0893-4C5D-B725-FC59748C8734\">\n        <meta name=\"created\" content=\"2022-11-11T14:25:46-0600\">\n        <meta name=\"modified\" content=\"2024-08-09T11:07:11-0500\">\n        <meta name=\"tags\" content=\"_book/Programing/Web-Scalability, _book/Programing, _book\">\n        <meta name=\"last device\" content=\"xiaoquan’s MacBook Pro\">\n        \n        <style>\n             body {\n   --base-background-color: #ffffff;\n   --document-background-color: var(--base-background-color);\n }\n\n.document-wrapper {\n  /* Constants used to transform theme values to CSS */\n  --transform-line-height-factor: 1.17;\n\n  /* From template */\n  --base-text-color: #444444;\n  --base-text-secondary-color: #888888;\n  --base-text-tertiary-color: #d9d9d9;\n  --base-background-color: #ffffff;\n  --base-background-secondary-color: #F3F5F7;\n  --base-background-tertiary-color: #E4E5E6;\n  --base-stroke-color: #d9d9d9;\n  --base-stroke-secondary-color: #d9d9d9;\n  --base-accent-color: #DD4C4F;\n  --base-highlight-color: ;\n\n  --document-background-color: var(--base-background-color);\n  --document-text-color: var(--base-text-color);\n  --document-text-secondary-color: var(--base-text-secondary-color);\n  --document-text-light-color: var(--base-text-secondary-color);\n  --document-accent-color: var(--base-accent-color);\n  --document-cursor-color: var(--base-accent-color);\n  --document-link-color: var(--base-accent-color);\n  --document-list-marker-color: var(--base-accent-color);\n  --document-marker-color: var(--base-text-tertiary-color);\n  --document-selection-color: var(--base-selection-color);\n  --document-selection-inactive-color: var(--base-background-tertiary-color);\n  --document-text-font: \"AvenirNext-Regular\";\n  --document-text-size: 15px;\n  --document-line-height-multiplier: calc(\n    1.5 * var(--transform-line-height-factor)\n  );\n\n  --document-headers-text-color: var(--base-text-color);\n  --document-headers-font: \"AvenirNext-Medium\";\n  --document-headers-modular-scale: 1.125;\n  --document-headers-line-height-multiplier: calc(\n    1.3 * var(--transform-line-height-factor)\n  );\n  --document-headers-add-top-bottom-padding: 1;\n  --document-headers-padding-top-multiplier: 0.5;\n  --document-headers-padding-bottom-multiplier: 0.3;\n\n  --document-code-text-color: var(--base-text-color);\n  --document-code-border-color: var(--base-text-tertiary-color);\n  --document-code-background-color: var(--base-background-secondary-color);\n  --document-code-font: \"Menlo-Regular\";\n  --document-code-text-size-multiplier: 0.91em;\n\n  --document-code-syntax-highlight-comment: #65798c;\n  --document-code-syntax-highlight-constant: #0095c9;\n  --document-code-syntax-highlight-number: #0095c9;\n  --document-code-syntax-highlight-string: #d12f1b;\n  --document-code-syntax-highlight-entity: #4a838b;\n  --document-code-syntax-highlight-keyword: #ad3da4;\n  --document-code-syntax-highlight-function: #4a838b;\n  --document-code-syntax-highlight-variable: #4a838b;\n\n  --document-task-background-color: var(--base-background-color);\n  --document-task-border-color: var(--base-text-secondary-color);\n  --document-task-check-color: var(--base-text-color);\n\n  --document-tag-background-color: var(--base-background-tertiary-color);\n  --document-tag-text-color: var(--base-text-color);\n  --document-tag-marker-color: var(--base-text-secondary-color);\n\n  --document-highlighter-background-color: #CDF7BD;\n  --document-highlighter-text-color: #102D05;\n\n  --document-highlighter-red-background-color: #FED09F;\n  --document-highlighter-red-text-color: #321A00;\n\n  --document-highlighter-blue-background-color: #C9E5FF;\n  --document-highlighter-blue-text-color: #001A32;\n\n  --document-highlighter-green-background-color: #CDF7BD;\n  --document-highlighter-green-text-color: #102D05;\n\n  --document-highlighter-purple-background-color: #FEDAFF;\n  --document-highlighter-purple-text-color: #310032;\n\n  --document-highlighter-yellow-background-color: #FCF195;\n  --document-highlighter-yellow-text-color: #312C01;\n  \n  --document-file-fold-color: var(--base-background-tertiary-color);\n  --document-file-background-color: var(--base-background-secondary-color);\n\n  --document-separator-border-color: var(--base-stroke-secondary-color);\n\n  --document-table-border-color: var(--base-stroke-secondary-color);\n  --document-table-cell-background-color: var(--base-background-color);\n  --document-table-cell-alternate-background-color: var(\n    --base-background-secondary-color\n  );\n}\n\n.document-wrapper,body{background-color:var(--document-background-color)}.document-wrapper h1.setext,.document-wrapper h2.setext{border-bottom:calc(2 * var(--document-hairline-width)) solid var(--document-separator-border-color);padding-bottom:.6em}.document-wrapper blockquote blockquote blockquote blockquote blockquote::before,.document-wrapper blockquote blockquote blockquote::before,.document-wrapper blockquote::before{background-color:var(--document-list-marker-color)}.document-wrapper td[data-alignment=\"1\"],.document-wrapper th{text-align:left}.document-wrapper :after,.document-wrapper :before,.document-wrapper a,.document-wrapper abbr,.document-wrapper acronym,.document-wrapper address,.document-wrapper applet,.document-wrapper article,.document-wrapper aside,.document-wrapper audio,.document-wrapper b,.document-wrapper big,.document-wrapper blockquote,.document-wrapper canvas,.document-wrapper caption,.document-wrapper center,.document-wrapper cite,.document-wrapper code,.document-wrapper dd,.document-wrapper del,.document-wrapper details,.document-wrapper dfn,.document-wrapper div,.document-wrapper dl,.document-wrapper dt,.document-wrapper em,.document-wrapper embed,.document-wrapper fieldset,.document-wrapper figcaption,.document-wrapper figure,.document-wrapper footer,.document-wrapper form,.document-wrapper h1,.document-wrapper h2,.document-wrapper h3,.document-wrapper h4,.document-wrapper h5,.document-wrapper h6,.document-wrapper header,.document-wrapper hgroup,.document-wrapper i,.document-wrapper iframe,.document-wrapper ins,.document-wrapper kbd,.document-wrapper label,.document-wrapper legend,.document-wrapper li,.document-wrapper mark,.document-wrapper menu,.document-wrapper nav,.document-wrapper object,.document-wrapper ol,.document-wrapper output,.document-wrapper p,.document-wrapper pre,.document-wrapper q,.document-wrapper ruby,.document-wrapper s,.document-wrapper samp,.document-wrapper section,.document-wrapper small,.document-wrapper span,.document-wrapper strike,.document-wrapper strong,.document-wrapper summary,.document-wrapper table,.document-wrapper tbody,.document-wrapper td,.document-wrapper tfoot,.document-wrapper th,.document-wrapper thead,.document-wrapper time,.document-wrapper tr,.document-wrapper tt,.document-wrapper u,.document-wrapper ul,.document-wrapper var,.document-wrapper video{all:unset}.document-wrapper{--document-inline-padding-top-bottom:0.25em;--document-inline-padding-left-right:0.25em;--header-1-font-size:2em;--header-2-font-size:1.6em;--header-3-font-size:1.27em;--document-hairline-width:calc(var(--document-text-size) / 15);box-sizing:border-box;color:var(--document-text-color);font-family:var(--document-text-font);font-size:var(--document-text-size);line-height:var(--document-line-height-multiplier);min-height:100%;max-width:48em;width:100%;tab-size:4;margin:0 auto;padding:0 2em}body{text-rendering:optimizeLegibility}.document-wrapper:focus-visible{outline:0}.document-wrapper .marker{color:var(--document-marker-color);display:none}.document-wrapper [data-direction=\"2\"]{direction:rtl}.document-wrapper div.footnote,.document-wrapper div.link-definition,.document-wrapper p{display:block}.document-wrapper p.blank-line::before{content:\" \"}.document-wrapper h1,.document-wrapper h2,.document-wrapper h3,.document-wrapper h4,.document-wrapper h5,.document-wrapper h6{font-family:var(--document-headers-font);display:block;line-height:var(--document-headers-line-height-multiplier)}.document-wrapper h1{font-size:var(--header-1-font-size);padding-block-start:0.8em;padding-block-end:0.33em}.document-wrapper h2{font-size:var(--header-2-font-size);padding-block-start:0.66em;padding-block-end:0.27em}.document-wrapper h3{font-size:var(--header-3-font-size);padding-block-start:0.53em;padding-block-end:0.27em}.document-wrapper code,.document-wrapper pre{font-size:var(--document-code-text-size-multiplier);font-family:var(--document-code-font),monospace}.document-wrapper h4,.document-wrapper h5,.document-wrapper h6{padding-block-start:0.4em;padding-block-end:0.27em}.document-wrapper h1.setext{margin-bottom:.45em}.document-wrapper h2.setext{margin-bottom:.2em}.document-wrapper .fenced-code *,.document-wrapper .fenced-code-content .marker,.document-wrapper .fenced-code-content .space,.document-wrapper .hard-linebreak-marker,.document-wrapper .image .space,.document-wrapper .image-destination,.document-wrapper .image-label,.document-wrapper .image-title,.document-wrapper .indented-code .space,.document-wrapper .link .space,.document-wrapper .link-destination,.document-wrapper .link-label,.document-wrapper .link-title,.document-wrapper .replace .text,.document-wrapper .setext-heading-marker+.line-ending,.document-wrapper .yaml-marker+.line-ending,.document-wrapper li>p>.space:first-child,.document-wrapper tr.delimiter-row{display:none}.document-wrapper ol,.document-wrapper ul{display:block;padding-inline-start:2.13em}.document-wrapper li{display:list-item;color:var(--document-text-color)}.document-wrapper .color-marker,.document-wrapper .entity-marker,.document-wrapper .fenced-code-content,.document-wrapper .fenced-code-content *,.document-wrapper .footnote-separator,.document-wrapper .link-definition-separator,.document-wrapper code.code-inline,.document-wrapper li>p{display:inline}.document-wrapper ul{list-style-type:disc}.document-wrapper li li li li li li li ul,.document-wrapper li li li li li ul,.document-wrapper li li li ul,.document-wrapper li ul{list-style:circle}.document-wrapper li li li li li li ul,.document-wrapper li li li li ul,.document-wrapper li li ul{list-style:disc}.document-wrapper li::marker{color:var(--document-list-marker-color)}.document-wrapper ol{list-style-type:none;counter-reset:custom-list-item calc(var(--data-list-start,1) - 1)}.document-wrapper ol>li{counter-increment:custom-list-item;position:relative}.document-wrapper ol>li::before{content:counter(custom-list-item) \". \";color:var(--document-list-marker-color);position:absolute;transform:translate(calc(-100% - .33em),0)}.document-wrapper ol>li[data-big-number=true]{margin-inline-start:-2.05em}.document-wrapper ol>li[data-big-number=true]::before{position:static;padding-inline-end:0.25em}.document-wrapper ol>li[data-list-type=\"1\"]:before{content:counter(custom-list-item) \") \"}.document-wrapper [data-direction=\"2\"] ol>li::before,.document-wrapper ol[data-direction=\"2\"]>li::before{transform:translate(calc(100% + .33em),0)}.document-wrapper li[role=checkbox]{list-style:none;position:relative}.document-wrapper li[aria-checked=true]{color:var(--document-text-secondary-color)}.document-wrapper .todo-checkbox{display:inline-block;margin-left:-1.7em;margin-right:.5em}.document-wrapper .todo-checkbox svg{display:inline-block;margin-bottom:-.3em}.document-wrapper blockquote{display:block;padding-inline-start:2.13em;position:relative}.document-wrapper code,.document-wrapper mark,span.highlighted{padding:var(--document-inline-padding-top-bottom) var(--document-inline-padding-left-right)}.document-wrapper blockquote::before{content:\"\";position:absolute;top:.2em;left:1em;width:.13em;height:calc(100% - .4em);border:var(--document-hairline-width) solid var(--document-list-marker-color);border-radius:.33em}.document-wrapper code,.document-wrapper pre.fenced-code,.document-wrapper pre.indented-code,.document-wrapper pre.yaml{color:var(--document-code-text-color);background-color:var(--document-code-background-color);border-radius:.25em}.document-wrapper [data-direction=\"2\"] blockquote::before,.document-wrapper blockquote[data-direction=\"2\"]::before{left:0;right:1em}.document-wrapper blockquote blockquote blockquote blockquote blockquote blockquote::before,.document-wrapper blockquote blockquote blockquote blockquote::before,.document-wrapper blockquote blockquote::before{background-color:transparent}.document-wrapper hr{display:block;margin-block-start:calc(var(--document-line-height-multiplier) * 0.5em);margin-block-end:calc(var(--document-line-height-multiplier) * -0.5em);border-top:var(--document-hairline-width) solid var(--document-separator-border-color)}.document-wrapper pre{display:block;white-space:pre-wrap}.document-wrapper pre.indented-code{padding-inline-start:2.13em}.document-wrapper pre.fenced-code,.document-wrapper pre.yaml{padding:0 .5em}.document-wrapper .fenced-code::before{content:\"\\200B\"}.document-wrapper code{font-weight:400;font-style:normal;display:block}.document-wrapper mark code{color:var(--document-text-color);background-color:var(--document-highlighter-background-color)}.document-wrapper em,.document-wrapper i{font-family:AvenirNext-Italic}.document-wrapper b,.document-wrapper strong,.document-wrapper th{font-family:AvenirNext-Bold}.document-wrapper mark,span.highlighted{color:var(--document-highlighter-background-text-color);background-color:var(--document-highlighter-background-color);text-decoration:inherit;unicode-bidi:embed;border-radius:.25em}.document-wrapper mark.red,span.highlighted.red{color:var(--document-highlighter-red-background-text-color);background-color:var(--document-highlighter-red-background-color)}.document-wrapper mark.blue,span.highlighted.blue{color:var(--document-highlighter-blue-background-text-color);background-color:var(--document-highlighter-blue-background-color)}.document-wrapper mark.green,span.highlighted.green{color:var(--document-highlighter-green-background-text-color);background-color:var(--document-highlighter-green-background-color)}.document-wrapper mark.yellow,span.highlighted.yellow{color:var(--document-highlighter-yellow-background-text-color);background-color:var(--document-highlighter-yellow-background-color)}.document-wrapper mark.purple,span.highlighted.purple{color:var(--document-highlighter-purple-background-text-color);background-color:var(--document-highlighter-purple-background-color)}.document-wrapper u{text-decoration:underline;text-decoration-color:var(--document-accent-color);unicode-bidi:embed}.document-wrapper s,.document-wrapper strike{text-decoration:line-through}.document-wrapper a{color:var(--document-link-color);unicode-bidi:embed;cursor:pointer}.document-wrapper a:hover{text-decoration:inherit}.document-wrapper .wiki-separator-marker{display:inline;color:inherit}.document-wrapper .link-definition-title{color:var(--document-text-light-color)}.document-wrapper .footnote-ref{font-size:.9em;vertical-align:super}.document-wrapper span.entity{direction:ltr;unicode-bidi:embed;color:var(--document-code-syntax-highlight-entity)}.document-wrapper span.escape{unicode-bidi:embed}.document-wrapper .color{font-family:var(--document-code-font),monospace;font-size:var(--document-code-text-size-multiplier);padding-inline-start:1.2em;position:relative;direction:ltr;unicode-bidi:embed}.document-wrapper .color::before{content:\"\";position:absolute;width:.9em;height:.9em;left:0;bottom:0;transform:translateY(-15%);border:var(--document-hairline-width) solid rgb(0,0,0,.3);border-radius:.9em;background-color:var(--data-color)}.document-wrapper .hashtag{color:var(--document-tag-text-color);background-color:var(--document-tag-background-color);border-radius:1em;padding:calc(var(--document-inline-padding-top-bottom) - 2 * var(--document-hairline-width)) calc(var(--document-inline-padding-left-right) + .3em);unicode-bidi:embed}.document-wrapper .hashtag>.marker{display:inline;color:var(--document-tag-marker-color);padding:0}.document-wrapper table{display:block;max-width:fit-content;overflow-x:auto;border-collapse:separate;border-spacing:0;border:var(--document-hairline-width) solid var(--document-table-border-color);border-radius:.33em;margin-bottom:calc(var(--document-line-height-multiplier) * 1em)}.document-wrapper table[data-direction=\"2\"]{margin-left:auto;direction:ltr}.document-wrapper tr{display:table-row;background-color:var(--document-table-cell-background-color)}.document-wrapper tr.header-row,.document-wrapper tr:nth-child(odd){background-color:var(--document-table-cell-alternate-background-color)}.document-wrapper td,.document-wrapper th{box-sizing:border-box;display:table-cell;padding:.37em .75em;min-width:5em;border-right:var(--document-hairline-width) solid var(--document-table-border-color)}.document-wrapper td:last-of-type,.document-wrapper th:last-of-type{border:none}.document-wrapper table[data-direction=\"2\"] td{margin-left:auto}.document-wrapper td[data-alignment=\"2\"]{text-align:right}.document-wrapper td[data-alignment=\"3\"]{text-align:center}.document-wrapper .code_comment{color:var(--document-code-syntax-highlight-comment)}.document-wrapper .code_constant{color:var(--document-code-syntax-highlight-constant)}.document-wrapper .code_number{color:var(--document-code-syntax-highlight-number)}.document-wrapper .code_string{color:var(--document-code-syntax-highlight-string)}.document-wrapper .code_entity{color:var(--document-code-syntax-highlight-entity)}.document-wrapper .code_keyword{color:var(--document-code-syntax-highlight-keyword)}.document-wrapper .code_function{color:var(--document-code-syntax-highlight-function)}.document-wrapper .code_variable{color:var(--document-code-syntax-highlight-variable)}.document-wrapper img{max-width:100%}.document-wrapper .pdf_preview{display:inline-block;width:100%;height:500px;background-color:#fff;overflow:hidden;padding:0;margin:0;position:relative;border-radius:4px}.document-wrapper .arrow svg #body,.document-wrapper .arrow svg #head{fill:var(--base-text-color)}.document-wrapper .todo-checkbox svg #body{stroke:var(--document-task-border-color)}.document-wrapper .todo-checkbox svg #check{fill:var(--document-task-check-color)}.document-wrapper .todo-checkbox.todo-checked svg #body{opacity:.35}.document-wrapper .todo-checkbox.todo-checked svg #check{opacity:.4}\n\n        </style>\n    </head>\n    <body>\n        <div class=\"document-wrapper\">\n            <h1 id='Data Layer'>Data Layer</h1><br>\n<h1 id='Table of Contents'>Table of Contents</h1><ul>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Scaling%20with%20MySQL%20%28Relational%20database%20engines%29'>Scaling with MySQL (Relational database engines)</a>\n<ul>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Replication%20'>Replication </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Data%20Partitioning%20%28Sharding%29%20'>Data Partitioning (Sharding) </a></li>\n</ul>\n</li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Scaling%20with%20NoSQL'>Scaling with NoSQL</a>\n<ul>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=CAP%20Theorem%20'>CAP Theorem </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=The%20Rise%20of%20Eventual%20Consistency%20'>The Rise of Eventual Consistency </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Faster%20Recovery%20to%20Increase%20Availability%20'>Faster Recovery to Increase Availability </a></li>\n<li><a href='bear://x-callback-url/open-note?id=26ADA945-0893-4C5D-B725-FC59748C8734&header=Cassandra%20Topology%20'>Cassandra Topology </a></li>\n</ul>\n</li>\n</ul><br>\n<hr><br>\n<br>\n<h2 id='Scaling with MySQL (Relational database engines)'>Scaling with MySQL (Relational database engines)</h2><h3 id='Replication'>Replication</h3><ul>\n<li><b>Replication</b> usually refers to a <b>mechanism</b> that allows you to have multiple <b>copies</b> of the same data stored <b>on different machines</b>.</li>\n</ul><br>\n<h4 id='Replication deployment topology'>Replication deployment topology</h4><ul>\n<li><b>Replication lag</b> (the time a data is updated on mater to it is replicated on a slave) should be <b>less than one second</b><br></li>\n<li><b>Master and Slave</b>\n<ul>\n<li>Connect to a slave to read data from it, but it can modify data only through the master server.</li>\n<li>The master server records all of these statements in a log file called a binlog, together with a timestamp, and it also assigns a sequence number to each statement.</li>\n<li>Once a statement is written to a binlog, it can then be sent to slave servers.</li>\n<li><b>Asynchronous</b> allows for <b>decoupling</b> of the master from its slaves</li>\n<li>You can always connect a new slave or disconnect slaves at any point in time without affecting the master.</li>\n</ul>\n</li>\n</ul><p><img src='Data%20Layer/BF7F4946-DB83-42A9-ABBB-45B62864FA36.png'></p><ul>\n<li><b>Advantage</b>:\n<ul>\n<li><b>Share load</b> for read-only queries</li>\n<li>Use different slave for <b>different types of queries</b>.\n<ul>\n<li>One slave for regular application queries and another slave for slow, long-running reports</li>\n</ul>\n</li>\n<li>Zero-downtime <b>backups</b></li>\n<li>Use a proxy or load balancer to implement failure detection</li>\n</ul>\n</li>\n<li><b>Failure</b>\n<ul>\n<li><b>Slave failure</b>\n<ul>\n<li>Remove it from service (load balancer), <b>rebuild</b> it from <b>back up</b> or slave or master with a sequence number, reconnect with load balancer, starting replicating</li>\n<li>The <b>older</b> the backup and the <b>busier</b> the database, the <b>longer</b> it will take for the new slave to catch up</li>\n</ul>\n</li>\n<li><b>Master failure</b>\n<ul>\n<li>Find out which of your slaves is <b>most up to date</b></li>\n<li>Make sure that other slaves are <b>identical</b> to your new master (by building all of them from new master or manually checking)\n<ul>\n<li><b>No data conflict</b></li>\n</ul>\n</li>\n<li><b>Reconfigure</b> all remaining slaves to replicate from the new master</li>\n</ul>\n</li>\n</ul>\n<br></li>\n<li><b>Master Master</b>\n<ul>\n<li>Master A replicates from Master B and Master B replicates from Master A (But clients <b>only writes to A</b> because <b>higher complexity</b> (Duplicating sequence number) and risk of <b>data inconsistency</b>(concurrent modification of the same row))</li>\n<li>Each statement written to a master’s binlog includes the name of the server it was originally written to (No duplicated statements)</li>\n</ul>\n</li>\n</ul><p><img src='Data%20Layer/96038CD1-0116-44B7-A9A9-316EFC766294.png'></p><ul>\n<li>In case of <b>Master A failure</b>, or any time you need to perform long-lasting maintenance, your application can be quickly <b>reconfigured</b> to direct all writes <b>to Master B</b></li>\n<li><b>Master Master with Slave</b>\n<ul>\n<li><b>Identical groups</b> of servers in a master-master configuration</li>\n<li>Allows you to switch between groups with <b>minimal downtime</b>\n<ul>\n<li>The downtime is cause by stopping incoming traffic necessarily to create a consistent model across all masters\n<ul>\n<li>For example, Take master B for system update, <u>stop master A, replicate A to B, reconfigure traffic to B</u>, update A (the underlined parts are the down time)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><p><img src='Data%20Layer/7B997E03-CA85-4F5D-B3B5-9A995038FCE1.png'></p><br>\n<ul>\n<li><b>Master Master</b> is bad for scalability (good for availability)\n<ul>\n<li>Both masters have to perform <b>all the writes</b></li>\n<li>Additional I/O to write replicated statements into the relay log</li>\n<li>Both of them will need more memory to hold ever-growing indexes and to keep enough of the data set in cache. (by being scaled vertically)</li>\n</ul>\n</li>\n</ul><br>\n<hr><br>\n<h5 id='Interesting questions regarding replication topology'>Interesting questions regarding replication topology</h5><ul>\n<li><b>Multilevel replication</b> to further distribute the load and keep adding even more slaves (<b>increases replication lag</b>, but <b>increase read capacity</b>)\n<ul>\n<li><b>Tiktok</b>, content could benefit from high read ability a few seconds or tens of seconds replication lag is not a problem as people are there to see content not a specific content (user profile need low replication lag thus does not suit Multilevel replication, functional spilt)</li>\n</ul>\n</li>\n<li><b>Replication</b> is a great way to scale the number of concurrently reading clients and the number of read queries per second, but it is <b>not a way to scale the overall data set size</b>.\n<ul>\n<li>Data is the same on all machines, means that a single server needs to write, read, index, and search through all of the data contained in your database.</li>\n</ul>\n</li>\n<li><b>Active data set</b>, all of the data that must be accessed frequently by your application\n<ul>\n<li>When active data set is big, it is impossible to fit them in memory. Loading from disk is a bottleneck.</li>\n</ul>\n</li>\n<li><b>Replication lag</b>\n<ul>\n<li>Cache the data that has been written on the client side so that you would not need to read the data that you have just written</li>\n<li>Alternatively, you can send critical read requests to the master so that they would always result in the most up-to-date data.</li>\n</ul>\n</li>\n<li><b>Consistency Break</b> (Once the mastery and slave are out of sync, all operations after that are invalid)\n<ul>\n<li>Using <b>functions</b> that generate <b>random numbers</b></li>\n<li>Executing an update <b>statement with a limit clause</b></li>\n<li>Although some open-source tools like <b>pt-table-checksum</b> or <b>pt-table-sync</b> can help you discover and fix such problems, there is no high-availability autopilot built into MySQL replication.\n<ul>\n<li>If things break, you are the one who will have to fix them, and it may require a great deal of knowledge, experience, and time to get there.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><b>Leverage host service</b>\n<ul>\n<li>Considering that managing MySQL replication is fairly involved, it can be a good strategy to use a hosted MySQL solution like <b>Amazon RDS</b> (Amazon Relational Database Service) or <b>Rackspace Cloud Database</b></li>\n</ul>\n</li>\n</ul><br>\n<h3 id='Data Partitioning (Sharding)'>Data Partitioning (Sharding)</h3><ul>\n<li><b>Data partitioning</b> is <b>divide</b> the data set into smaller pieces so that it could be <b>distributed</b> across <b>multiple machines</b> and so that none of the servers would need to deal with the entire data set.\n<ul>\n<li>Servers become <b>independent</b> from one another, as they share nothing</li>\n</ul>\n</li>\n<li><b>Choosing the Sharding Key</b>\n<ul>\n<li>A <b>Sharding key</b> is the information that is used to decide which server is responsible for the data that you are looking for</li>\n<li>In fact, MySQL does not need any special configuration, as it does not know that sharding is applied to the data set.</li>\n<li>All of the sharding logic lives in your application and the database schema is identical on all of the shards.</li>\n</ul>\n</li>\n</ul><p><img src='Data%20Layer/DB606EE1-602B-474D-99FD-91A61A145646.png'></p><ul>\n<li><b>Even distribution</b>\n<ul>\n<li>It is usually not possible to ensure equal size of your data buckets, but as long as your buckets are small and you have a lot of them, your servers will still end up with a pretty good overall data distribution.</li>\n</ul>\n</li>\n<li><b>Advantage</b>\n<ul>\n<li>Scale <b>horizontally</b></li>\n<li>You can implement it in the <b>application layer</b> and then apply it to any data store, regardless of whether it supports sharding out of the box or not.</li>\n</ul>\n</li>\n<li><b>Challenge in application-level sharding</b> (consider a cloud host that solves them, Azure SQL Database Elastic Scale)\n<ul>\n<li>Cannot execute <b>queries spanning multiple shards</b>\n<ul>\n<li>Any time you want to run such a query, you need to execute parts of it on each shard and then somehow merge the results in the application layer.</li>\n</ul>\n</li>\n<li><b>Losing ACID transaction</b> (Atomicity, Consistency, Isolation, Durability)\n<ul>\n<li>Maintaining ACID properties across shards requires you to use <b>distributed transactions</b>.\n<ul>\n<li>If you run update shard A and succeed, then update shard B and failed, you can’t roll back shard A as it has been completed.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><b>Add more servers (shards)</b>, Depending on how you map from sharding key to the server number, it might be surprisingly difficult to add more servers to your sharded deployment.\n<ul>\n<li><b>Modulo-based mapping</b> is that each user is assigned to a particular server based on the total number of servers. As the total number of servers changes, most of the user–server mappings change.</li>\n<li><b>Alternative</b>, keep all of the mappings in a separate database (possibly a master topology to increase availability)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><p><img src='Data%20Layer/ADA9199F-57AA-4922-9ABA-6BE104628D56.png'></p><ul>\n<li><b>Alternative</b>, (easier) Use the <b>modulo function</b> to map from the sharding key value to the database number, but each database is just a <b>logical MySQL database</b> rather than a physical machine.\n<ul>\n<li>Modulo function to locate server number and db number</li>\n</ul>\n</li>\n</ul><p><img src='Data%20Layer/6E0EB5AB-F111-4CAB-B6E8-4D200A0EE6DF.png'></p><ul>\n<li>When you want to <b>scale</b>, copy half of the data to two servers and update the Module function that locate server number (double capacity and modify a few lines)</li>\n</ul><p><img src='Data%20Layer/F91BD053-BD8A-445B-AD69-42714A7D7C04.png'></p><ul>\n<li><b>Globally unique identifier</b>, some data store supports it\n<ul>\n<li>Use some <b>logic</b> (even, odd) or <b>atomic counters</b> provided by some data stores</li>\n</ul>\n</li>\n</ul><br>\n<h2 id='Scaling with NoSQL'>Scaling with NoSQL</h2><ul>\n<li>The <b>mind shift</b> of the NoSQL era is that when you set out to design a data store, you need to first decide what <b>features</b> are most <b>important</b> to you (for example availability, latency, consistency, ease of use, transactional guarantees, or other dimensions of scalability).\n<ul>\n<li>All of the NoSQL data stores make <b>significant sacrifices</b> to support their top-priority features</li>\n</ul>\n</li>\n</ul><br>\n<h3 id='CAP Theorem'>CAP Theorem</h3><ul>\n<li>In this theorem, a distributed system consists of <b>nodes</b> (servers) and <b>network</b> connections allowing nodes to talk to each other.</li>\n<li><b>Consistency</b> ensures that all of the nodes see the same data at the same time.</li>\n<li><b>Availability</b> guarantees that any available node can serve client requests even when other nodes fail.</li>\n<li><b>Partition</b> tolerance ensures that the system can operate even in the face of network failures where communication between nodes is impossible.</li>\n</ul><br>\n<h3 id='The Rise of Eventual Consistency'>The Rise of Eventual Consistency</h3><ul>\n<li><b>Eventual consistency</b> is a property of a system where different nodes may have different versions of the data, but where state changes eventually propagate to all of the servers.</li>\n<li>Some data stores use eventual consistency as a way to increase <b>high availability</b>\n<ul>\n<li>It can lead to <b>conflicts</b></li>\n<li>The <b>simplest policy</b> is to <b>accept the most recent write</b> and discard earlier writes.</li>\n<li><b>Alternatively</b>, some data stores like Dynamo <b>push the responsibility for conflict</b> resolution onto its clients\n<ul>\n<li>The client can then apply <b>different business rules</b> to resolve each type of conflict in the most graceful way.\n<ul>\n<li><b>The Amazon shopping cart</b>, people can still put things in the shopping cart when some servers is down. These writes may lead of conflicts. Whenever the multiple versions of shopping cart are discovered by the client code, the carts are merged by adding all the items from all of the shopping carts. No item added to a cart would be lost. (the most graceful way)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Eventually consistent system like MySQL replication, where only one server can accept writes, it can be a challenge to keep all of the copies of the data in sync.\n<ul>\n<li>Even the smallest human error, application bug, or hardware issue could result in the slave having different data from the master.</li>\n</ul>\n</li>\n<li>To deal with edge-case scenarios where different servers end up with different data, some NoSQL data stores, like Cassandra, employ additional <b>self-healing</b> strategies\n<ul>\n<li>For example, <b>10 percent</b> of reads sent to <b>Cassandra</b> nodes trigger a background <b>read repair</b> mechanism.\n<ul>\n<li>As part of this process, after a response is sent to the client, the Cassandra node fetches the requested data from all of the replicas, compares their values, and sends updates back to any node with inconsistent or stale data.</li>\n<li>It might seem like overkill to keep comparing all of the data 10 percent of the time, since each of the replicas can accept writes, it is very easy for data to diverge during any maintenance or network issues. Having a fast way of repairing data adds overhead, but it makes the overall system much more resilient to failures</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Eventual consistency is a tradeoff and it is usually <b>much more difficult to reason</b> about an eventually consistent system than a globally consistent one.</li>\n<li>Some of the eventually consistent systems, like Cassandra, allow clients to <b>fine-tune</b> the guarantees and tradeoffs made by specifying the consistency level of each query independently.</li>\n<li><b>Quorum consistency</b>, the majority of the replicas agree on the result.\n<ul>\n<li>When you write using quorum consistency, the majority of the servers need to confirm that they have persisted your change.</li>\n<li>Reading using a quorum, on the other hand, means that the majority of the replicas need to respond so that the most up-to-date copy of the data can be found and returned to the client.</li>\n</ul>\n</li>\n</ul><br>\n<h3 id='Faster Recovery to Increase Availability'>Faster Recovery to Increase Availability</h3><ul>\n<li>In <b>MongoDB</b>, data is <b>automatically sharded</b> and distributed among multiple  servers\n<ul>\n<li>Any time a server becomes <b>unavailable</b>, MongoDB <b>rejects</b> all writes to the data that the failed server was responsible for.</li>\n<li>To <b>add data redundancy</b> and <b>increase high availability</b>, MongoDB supports <b>replica sets</b>, and it is recommended to set up each of the shards as a replica set.\n<ul>\n<li>In replica sets, multiple servers share the same data, with a single server being elected as a primary.</li>\n<li>Whenever the primary node fails, an election process is initiated to decide which of the remaining nodes should take over the primary role.</li>\n</ul>\n</li>\n<li>This way, the window of <b>unavailability</b> can be <b>minimized</b> by <b>automatic and prompt failover</b></li>\n<li>If the primary node failed before your changes got replicated to secondary nodes, your changes would be permanently lost</li>\n</ul>\n</li>\n</ul><br>\n<h3 id='Cassandra Topology'>Cassandra Topology</h3><ul>\n<li>All of its nodes are <b>functionally equal</b> (No single point of failure)\n<ul>\n<li>Not identical, Cassandra performs data partitioning automatically so that each of the nodes gets a subset of the overall data set.</li>\n</ul>\n</li>\n<li>Clients can connect to any of Cassandra’s nodes and when they connect to one, that node becomes the client’s <b>session coordinator</b></li>\n<li>Clients send all of their requests to the session coordinator and the coordinator takes responsibility for all of the internal cluster activities like replication or sharding. (great example of <b>decoupling</b> and significantly reduces complexity on the application side)</li>\n</ul><p><img src='Data%20Layer/83019D15-0908-4115-820E-1CA836C0354D.png'></p><ul>\n<li><b>Advantage</b>\n<ul>\n<li>Rather than defining the schema up front, you <b>dynamically create fields</b> as they are required (data have different fields and live on different servers)\n<ul>\n<li>You can make application changes more rapidly without the need to execute expensive alter table commands any time you want to persist a new type of information.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><b>Challenge</b>\n<ul>\n<li><b>Fewer tools to search for data</b>, To access data in any of the columns, you need to know which row are you looking for<b>row key</b> (something like a <b>primary key</b> in a relational database)</li>\n<li>The coordinator looks up which Cassandra server is responsible for that particular partition range and delegates the query to the correct server.</li>\n</ul>\n</li>\n</ul><hr><br>\n<ul>\n<li>In Cassandra, you can specify how many copies of each piece of data you want to keep across the cluster, and session coordinators are responsible for ensuring the correct number of replicas.</li>\n</ul><hr><br>\n<ul>\n<li>It is <b>easy to get started</b> with most NoSQL data stores, but to be able to <b>operate them at scale</b> takes much more <b>experience</b> and <b>understanding</b> of their internal structure than you might expect.\n<ul>\n<li><b>Deletes are the most expensive</b> type of operation you can perform in Cassandra, which can come as a big surprise.</li>\n</ul>\n</li>\n<li>Without deep knowledge of the strengths, weaknesses, and internals of NoSQL data stores, you can easily paint yourself into a corner.\n<ul>\n<li><b>Before</b> you decide to <b>use any of the NoSQL</b> data stores, I suggest <b>reading</b> at least one book about the selected data store and then explicitly <b>search</b> for <b>gotchas</b>, <b>pitfalls</b>, and <b>common problems</b> that people run into when using that technology.</li>\n</ul>\n</li>\n</ul><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<p><span class='hashtag'><span class='hashtag-marker marker'>#</span>_book<span class='hashtag-separator-marker marker'>/</span>Programing<span class='hashtag-separator-marker marker'>/</span>Web-Scalability</span></p>\n        </div>\n    </body>\n</html>\n"}